{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyweiland/Github/react-todo-list/src/components/TodoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoItem from './TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  todos,\n  onRemove,\n  onSelect,\n  isCondensed\n}) => {\n  _s();\n  const [removing, setRemoving] = useState(null);\n  const handleRemove = id => {\n    setRemoving(id); // Trigger the animation\n    setTimeout(() => {\n      onRemove(id); // Remove the item after the animation\n      setRemoving(null);\n    }, 300); // Match the animation duration\n  };\n\n  // Sort todos: incomplete first, completed last\n  const sortedTodos = [...todos].sort((a, b) => a.completed ? 1 : -1);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"space-y-2\",\n    children: sortedTodos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `transition-all duration-300 ${removing === todo.id ? 'opacity-0 translate-x-4' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        description: todo.description,\n        completed: todo.completed // Pass completed state\n        ,\n        onComplete: () => {\n          todo.completed = !todo.completed; // Toggle completion\n          onSelect(todo); // Update the selected todo\n        },\n        onClick: () => onSelect(todo),\n        isCondensed: isCondensed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"TOtc5QaX+jWcR/ZYJrg07yLOHSs=\");\n_c = TodoList;\nexport default TodoList;\n/*#__PURE__*/_jsxDEV(TodoList, {\n  todos: todos,\n  onRemove: removeTodo,\n  onSelect: todo => updateTodoCompletion(todo.id),\n  isCondensed: isCondensed\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 1\n}, this);\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoItem","jsxDEV","_jsxDEV","TodoList","todos","onRemove","onSelect","isCondensed","_s","removing","setRemoving","handleRemove","id","setTimeout","sortedTodos","sort","a","b","completed","className","children","map","todo","text","description","onComplete","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","removeTodo","updateTodoCompletion","$RefreshReg$"],"sources":["/Users/zacharyweiland/Github/react-todo-list/src/components/TodoList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TodoItem from './TodoItem';\n\nexport interface Todo {\n  id: number;\n  text: string;\n  description?: string;\n  completed?: boolean; // New property to track completion\n}\n\ninterface TodoListProps {\n  todos: Todo[];\n  onRemove: (id: number) => void;\n  onSelect: (todo: Todo) => void;\n  isCondensed: boolean; // New prop for list style\n}\n\nconst TodoList: React.FC<TodoListProps> = ({ todos, onRemove, onSelect, isCondensed }) => {\n  const [removing, setRemoving] = useState<number | null>(null);\n\n  const handleRemove = (id: number) => {\n    setRemoving(id); // Trigger the animation\n    setTimeout(() => {\n      onRemove(id); // Remove the item after the animation\n      setRemoving(null);\n    }, 300); // Match the animation duration\n  };\n\n  // Sort todos: incomplete first, completed last\n  const sortedTodos = [...todos].sort((a, b) => (a.completed ? 1 : -1));\n\n  return (\n    <ul className=\"space-y-2\">\n      {sortedTodos.map((todo) => (\n        <li\n          key={todo.id}\n          className={`transition-all duration-300 ${\n            removing === todo.id ? 'opacity-0 translate-x-4' : ''\n          }`}\n        >\n          <TodoItem\n            text={todo.text}\n            description={todo.description}\n            completed={todo.completed} // Pass completed state\n            onComplete={() => {\n              todo.completed = !todo.completed; // Toggle completion\n              onSelect(todo); // Update the selected todo\n            }}\n            onClick={() => onSelect(todo)}\n            isCondensed={isCondensed}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n\n<TodoList\n  todos={todos}\n  onRemove={removeTodo}\n  onSelect={(todo) => updateTodoCompletion(todo.id)}\n  isCondensed={isCondensed}\n/>"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBlC,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAE7D,MAAMY,YAAY,GAAIC,EAAU,IAAK;IACnCF,WAAW,CAACE,EAAE,CAAC,CAAC,CAAC;IACjBC,UAAU,CAAC,MAAM;MACfR,QAAQ,CAACO,EAAE,CAAC,CAAC,CAAC;MACdF,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX,CAAC;;EAED;EACA,MAAMI,WAAW,GAAG,CAAC,GAAGV,KAAK,CAAC,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACE,SAAS,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;EAErE,oBACEhB,OAAA;IAAIiB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACtBN,WAAW,CAACO,GAAG,CAAEC,IAAI,iBACpBpB,OAAA;MAEEiB,SAAS,EAAE,+BACTV,QAAQ,KAAKa,IAAI,CAACV,EAAE,GAAG,yBAAyB,GAAG,EAAE,EACpD;MAAAQ,QAAA,eAEHlB,OAAA,CAACF,QAAQ;QACPuB,IAAI,EAAED,IAAI,CAACC,IAAK;QAChBC,WAAW,EAAEF,IAAI,CAACE,WAAY;QAC9BN,SAAS,EAAEI,IAAI,CAACJ,SAAU,CAAC;QAAA;QAC3BO,UAAU,EAAEA,CAAA,KAAM;UAChBH,IAAI,CAACJ,SAAS,GAAG,CAACI,IAAI,CAACJ,SAAS,CAAC,CAAC;UAClCZ,QAAQ,CAACgB,IAAI,CAAC,CAAC,CAAC;QAClB,CAAE;QACFI,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAACgB,IAAI,CAAE;QAC9Bf,WAAW,EAAEA;MAAY;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC,GAfGR,IAAI,CAACV,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBV,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACtB,EAAA,CAtCIL,QAAiC;AAAA4B,EAAA,GAAjC5B,QAAiC;AAwCvC,eAAeA,QAAQ;AAEvB,aAAAD,OAAA,CAACC,QAAQ;EACPC,KAAK,EAAEA,KAAM;EACbC,QAAQ,EAAE2B,UAAW;EACrB1B,QAAQ,EAAGgB,IAAI,IAAKW,oBAAoB,CAACX,IAAI,CAACV,EAAE,CAAE;EAClDL,WAAW,EAAEA;AAAY;EAAAoB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC1B,CAAC;AAAA,IAAAC,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}