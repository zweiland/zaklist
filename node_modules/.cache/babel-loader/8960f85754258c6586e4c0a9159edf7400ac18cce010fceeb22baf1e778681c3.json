{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyweiland/Github/react-todo-list/src/components/TodoList.tsx\";\nimport React from 'react';\nimport TodoItem from './TodoItem'; // Ensure the default export is used\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  todos,\n  onRemove,\n  onSelect,\n  isCondensed\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"space-y-2\",\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        description: todo.description,\n        completed: todo.completed || false // Pass completed state\n        ,\n        onComplete: () => onRemove(todo.id) // Keep the remove functionality\n        ,\n        onClick: () => onSelect(todo) // Opens the edit drawer\n        ,\n        isCondensed: isCondensed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","TodoItem","jsxDEV","_jsxDEV","TodoList","todos","onRemove","onSelect","isCondensed","className","children","map","todo","text","description","completed","onComplete","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zacharyweiland/Github/react-todo-list/src/components/TodoList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TodoItem from './TodoItem'; // Ensure the default export is used\n\nexport interface Todo {\n  id: number;\n  text: string;\n  description?: string;\n  completed?: boolean; // New property to track completion\n  color?: string; // New property for color-coding\n}\n\ninterface TodoListProps {\n  todos: Todo[];\n  onRemove: (id: number) => void;\n  onSelect: (todo: Todo) => void;\n  isCondensed: boolean; // New prop for list style\n}\n\nconst TodoList: React.FC<TodoListProps> = ({ todos, onRemove, onSelect, isCondensed }) => {\n  return (\n    <ul className=\"space-y-2\">\n      {todos.map((todo) => (\n        <li key={todo.id}>\n          <TodoItem\n            text={todo.text}\n            description={todo.description}\n            completed={todo.completed || false} // Pass completed state\n            onComplete={() => onRemove(todo.id)} // Keep the remove functionality\n            onClick={() => onSelect(todo)} // Opens the edit drawer\n            isCondensed={isCondensed}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAiBnC,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EACxF,oBACEL,OAAA;IAAIM,SAAS,EAAC,WAAW;IAAAC,QAAA,EACtBL,KAAK,CAACM,GAAG,CAAEC,IAAI,iBACdT,OAAA;MAAAO,QAAA,eACEP,OAAA,CAACF,QAAQ;QACPY,IAAI,EAAED,IAAI,CAACC,IAAK;QAChBC,WAAW,EAAEF,IAAI,CAACE,WAAY;QAC9BC,SAAS,EAAEH,IAAI,CAACG,SAAS,IAAI,KAAM,CAAC;QAAA;QACpCC,UAAU,EAAEA,CAAA,KAAMV,QAAQ,CAACM,IAAI,CAACK,EAAE,CAAE,CAAC;QAAA;QACrCC,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAACK,IAAI,CAAE,CAAC;QAAA;QAC/BJ,WAAW,EAAEA;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC,GARKV,IAAI,CAACK,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASZ,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACC,EAAA,GAjBInB,QAAiC;AAmBvC,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}